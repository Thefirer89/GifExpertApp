{"version":3,"sources":["components/CategoryAdd.js","components/GifGridItem.js","helpers/GetGif.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","value","onChange","target","GifGridItem","title","url","className","src","alt","GetGif","search","a","encodeURI","fetch","res","json","data","gif","map","img","id","images","downsized_medium","useFetchGifs","category","loading","state","setState","useEffect","then","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4LA8BeA,EA3BK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EACDC,mBAAS,IADR,mBAC7BC,EAD6B,KAClBC,EADkB,KAgBpC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAKlB,SACI,uBAAOO,MAAOR,EAAYS,SAfR,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,QCQhBG,EAbK,SAAC,GAAe,IAAdC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,IACxB,OACI,qBAAKC,UAAU,wCAAf,SACI,6BACI,+BACI,6BAAKF,IACL,qBAAKG,IAAKF,EAAKG,IAAKJ,Y,uBCYzBK,EAjBH,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACLN,EADK,iDAC2CO,UAAUF,GADrD,+DAGOG,MAAMR,GAHb,cAGLS,EAHK,gBAIUA,EAAIC,OAJd,uBAIJC,EAJI,EAIJA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACxB,MAAM,CACFC,GAAGD,EAAIC,GACPhB,MAAMe,EAAIf,MACVC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAV/B,kBAcJY,GAdI,4CAAH,sDCmBGM,EAnBM,SAACC,GAAY,MAELjC,mBAAS,CAC9B8B,OAAO,GACPI,SAAQ,IAJkB,mBAEvBC,EAFuB,KAEjBC,EAFiB,KAgB9B,OATAC,qBAAU,WACNnB,EAAOe,GAAUK,MAAM,SAAAb,GACnBW,EAAS,CACLN,OAAOL,EACPS,SAAQ,SAGlB,CAACD,IAEIE,GCMII,EApBC,SAAC,GAAe,IAAdN,EAAa,EAAbA,SAAa,EAEDD,EAAaC,GAAhCH,EAFoB,EAEpBA,OAAQI,EAFY,EAEZA,QAEf,OACI,qCACI,6BAAKD,IACJC,GAAS,mBAAGnB,UAAU,mCAAb,wBAEV,qBAAKA,UAAU,YAAf,SAEQe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCW/BW,EAxBM,WAAK,IAAD,EAEcxC,mBAAS,CAAC,cAFxB,mBAEdyC,EAFc,KAEH1C,EAFG,KAQrB,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEI0C,EAAWd,KAAK,SAAAM,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCdlCS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.834805a2.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoryAdd = ({setCategories}) =>{\r\n    const [inputValue,setInputValue] = useState('');\r\n\r\n    const HandleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const HandleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cat => [inputValue,...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={HandleSubmit}>\r\n            <input value={inputValue} onChange={HandleInputChange} />\r\n        </form>\r\n    );\r\n}\r\n\r\nCategoryAdd.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\nexport default CategoryAdd;","import React from 'react';\r\n\r\nconst GifGridItem = ({title,url})=>{\r\n    return(\r\n        <div className=\"card animate__animated animate__pulse\">\r\n            <ol>\r\n                <li>\r\n                    <h3>{title}</h3>\r\n                    <img src={url} alt={title}/>\r\n                </li>\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;","\r\n\r\n\r\nconst GetGif = async(search)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(search)}&limit=15&api_key=5sXSD6t7Lzmt8MtJZ8AHIdKrbviqeSG4`;\r\n\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n\r\n    const gif = data.map(img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gif;\r\n}\r\n\r\nexport default GetGif;","import {useState,useEffect} from 'react';\r\nimport GetGif from '../helpers/GetGif';\r\n\r\nconst useFetchGifs = (category) =>{\r\n    //Custom hook\r\n    const [state,setState] = useState({\r\n        images:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{//Hook que enlista funciones para que no vuelva a ejecutarlas cuando haya cambio de evento solo se va a ejecutar una unica vez.\r\n        GetGif(category).then( data => {\r\n            setState({\r\n                images:data,\r\n                loading:false\r\n            });\r\n        });\r\n    },[category]);//La lista se define las variables que podrian cambiar, cuando las variables cambien se ejecutara este hook\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs;","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport '../index.css';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({category}) =>{\r\n\r\n    const {images, loading} = useFetchGifs(category);\r\n   \r\n    return(\r\n        <>\r\n            <h2>{category}</h2>\r\n            {loading&&<p className='animate__animated animate__flash'>Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img =>\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import React,{useState} from 'react';\r\nimport CategoryAdd from './components/CategoryAdd';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    const [categories,setCategories] = useState(['Ghost 221']);\r\n\r\n    /*const HandleAdd = () =>{\r\n        setCategories([...categories,'Makarov']);\r\n    }*/\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            <CategoryAdd setCategories={setCategories} />\r\n            <ol>\r\n            {\r\n                categories.map( category =>\r\n                    <GifGrid key={category} category={category} />\r\n                )\r\n            }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}